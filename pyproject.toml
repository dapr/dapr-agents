[build-system]
requires = ["setuptools>=61.0", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "dapr-agents"
dynamic = ["version"]
description = "Agentic Workflows Made Simple"
keywords = ["dapr", "agents", "workflows"]
readme = "README.md"
requires-python = ">=3.10"
license = {file = "LICENSE"}
authors = [
    {name = "Dapr Authors", email = "dapr@dapr.io"}
]
dependencies = [
    "dapr>=1.15.0",
    "pydantic>=2.11.3,<3.0.0",
    "jinja2>=3.1.0",
    "pyyaml>=6.0",
    "requests>=2.31.0",
    "openapi-pydantic>=0.3.0",
    "rich==13.9.4",
    "openai==1.75.0",
    "azure-identity==1.21.0",
    "huggingface_hub==0.30.2",
    "colorama>=0.4.6",
    "regex>=2023.0.0",
    "fastapi>=0.110.0",
    "uvicorn>=0.27.0",
    "aiohttp>=3.9.0",
    "python-dotenv>=1.0.0",
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

[project.optional-dependencies]
# Basic testing dependencies (no Dapr integration)
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "httpx>=0.27.0",  # For testing FastAPI endpoints
]

# Integration testing dependencies (requires Dapr runtime)
test-integration = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.0.0",  # Parallel test execution
    "pytest-timeout>=2.1.0",  # Test timeouts
    "httpx>=0.27.0",
    "psutil>=5.9.0",  # Process management for Dapr
]

# Performance testing dependencies
test-performance = [
    "pytest>=7.0.0",
    "pytest-benchmark>=4.0.0",
    "memory-profiler>=0.61.0",
    "psutil>=5.9.0",
]

# All test dependencies combined
test-all = [
    "dapr-agents[test,test-integration,test-performance]",
]

# Regular development dependencies (no local editable installs)
dev = [
    "mypy==1.15.0",
    "mcp==1.7.1",
    "opentelemetry-distro==0.53b1",
    "opentelemetry-exporter-otlp==1.32.1",
    "opentelemetry-instrumentation-requests==0.53b1",
    "dapr-ext-fastapi==1.15.0",
    "dapr-ext-workflow==1.15.0",
    "cloudevents==1.11.0",
    "black>=23.0.0",  # Code formatting
    "isort>=5.12.0",  # Import sorting
    "flake8>=6.0.0",  # Linting
    "pre-commit>=3.0.0",  # Git hooks
]

# Local development dependencies (includes dev + local editable packages)
# Note: This doesn't include the actual -e ../python-sdk as that can't be in pyproject.toml
dev-local = [
    "dapr-agents[dev,test-all]",
    # Additional tools for local development
    "ipython>=8.0.0",  # Better REPL
    "jupyter>=1.0.0",  # Notebooks
    "ipdb>=0.13.0",  # Debugging
]

# Documentation dependencies
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocs-mermaid2-plugin>=1.0.0",
]

# Complete development environment
dev-complete = [
    "dapr-agents[dev-local,docs]",
]

[project.urls]
Documentation = "https://github.com/dapr/docs"
Source = "https://github.com/dapr/python-sdk"

[tool.setuptools.packages.find]
include = ["dapr_agents"]
exclude = ["tests"]

[tool.setuptools_scm]
version_scheme = "guess-next-dev"
local_scheme = "node-and-date"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
asyncio_mode = "auto"
markers = [
    "unit: Unit tests (fast, no external deps)",
    "integration: Integration tests (require Dapr)",
    "e2e: End-to-end tests",
    "performance: Performance tests",
    "slow: Slow tests (may take minutes)",
    "requires_api_key: Tests requiring API keys",
    "provider_specific: Tests for specific providers",
]
addopts = [
    "--strict-markers",
    "--strict-config",
    "-ra",
]

[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true